{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","Reverse","setState","this","className","type","onClick","ALPABET","LENGTH","goods","visibleGoods","sort","goodA","goodB","localeCompare","length","reverse","getReorderedGoods","map","good","href","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,kFAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAaE,IAAME,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,MAJvB,EAOEC,QAAU,WACR,EAAKC,UAAS,SAACN,GACb,OAAIA,EAAME,WACD,CAAEA,YAAY,GAGhB,CAAEA,YAAY,OAb3B,4CAiBE,WAAU,IAAD,OACP,EAA4CK,KAAKP,MAAzCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,SAsB/B,OACE,0BAASK,UAAU,uBAAnB,WACIP,GACA,wBACEO,UAAU,uCACVC,KAAK,SACLC,QAAS,kBAAO,EAAKJ,SAAS,CAAEL,WAAW,KAH7C,mBASDA,GACC,qCACE,mBAAGO,UAAU,2BAAb,0BAIA,sBAAKA,UAAU,aAAf,UACE,wBACEA,UAAU,kBACVC,KAAK,SACLC,QAAS,kBAAO,EACbJ,SAAS,CAAEH,SAAUN,EAASc,WAJnC,iCASA,wBACEH,UAAU,kBACVC,KAAK,SACLC,QAAS,kBAAO,EAAKJ,SAAS,CAAEH,SAAUN,EAASe,UAHrD,4BAQA,wBACEJ,UAAU,kBACVC,KAAK,SACLC,QAAS,kBAAM,EAAKL,WAHtB,qBAQA,wBACEG,UAAU,4BACVC,KAAK,SACLC,QAAS,kBAAO,EAAKJ,SAAS,CAC5BJ,YAAY,EACZC,SAAUN,EAASO,QALvB,sBAYF,qBAAKI,UAAU,QAAf,SA3ER,SAA2BK,GACzB,IAAMC,EAAY,YAAOD,GAEzB,OAAQV,GACN,KAAKN,EAASc,QACZG,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACxD,MAEF,KAAKpB,EAASe,OACZE,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAO7D,OAAOjB,EAAaY,EAAaM,UAAYN,EA4DpCO,CAAkBvB,GAAiBwB,KAAI,SAAAC,GAAI,OAC1C,mBACEC,KAAK,QAELhB,UAAU,0BAHZ,SAKGe,GAHIA,kBApGvB,GAAyBE,IAAMC,WC3B/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.062da329.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\n// DON'T save goods to the state\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  Reverse = () => {\n    this.setState((state) => {\n      if (state.isReversed) {\n        return { isReversed: false };\n      }\n\n      return { isReversed: true };\n    });\n  };\n\n  render() {\n    const { isStarted, isReversed, sortType } = this.state;\n    // Use this function in the render method\n\n    function getReorderedGoods(goods: string[]) {\n      const visibleGoods = [...goods];\n\n      switch (sortType) {\n        case SortType.ALPABET:\n          visibleGoods.sort((goodA, goodB) => goodA.localeCompare(goodB));\n          break;\n\n        case SortType.LENGTH:\n          visibleGoods.sort((goodA, goodB) => goodA.length - goodB.length);\n          break;\n\n        default:\n          break;\n      }\n\n      return isReversed ? visibleGoods.reverse() : visibleGoods;\n    }\n\n    return (\n      <article className=\"App panel is-warning\">\n        {!isStarted && (\n          <button\n            className=\"button is-large is-info is-fullwidth\"\n            type=\"button\"\n            onClick={() => (this.setState({ isStarted: true }))}\n          >\n            Start\n          </button>\n        )}\n\n        {isStarted && (\n          <>\n            <p className=\"App__title panel-heading\">\n              Shoping-list\n            </p>\n\n            <div className=\"panel-tabs\">\n              <button\n                className=\"button is-white\"\n                type=\"button\"\n                onClick={() => (this\n                  .setState({ sortType: SortType.ALPABET }))}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                className=\"button is-white\"\n                type=\"button\"\n                onClick={() => (this.setState({ sortType: SortType.LENGTH }))}\n              >\n                Sort by length\n              </button>\n\n              <button\n                className=\"button is-white\"\n                type=\"button\"\n                onClick={() => this.Reverse()}\n              >\n                Reverse\n              </button>\n\n              <button\n                className=\"button is-danger is-light\"\n                type=\"button\"\n                onClick={() => (this.setState({\n                  isReversed: false,\n                  sortType: SortType.NONE,\n                }))}\n              >\n                Reset\n              </button>\n            </div>\n\n            <div className=\"Goods\">\n              {getReorderedGoods(goodsFromServer).map(good => (\n                <a\n                  href=\"#test\"\n                  key={good}\n                  className=\"Goods__item panel-block\"\n                >\n                  {good}\n                </a>\n              ))}\n            </div>\n          </>\n        )}\n      </article>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}